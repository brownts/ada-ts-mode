Code: (lambda () (imenu-transform nil))

Name: Empty File

=-=
=-=-=

Code: (lambda () (imenu-transform '(("Package" ("Test")))))

Name: package_declaration (identifier)

=-=
package Test is
end Test;
=-=-=

Code: (lambda () (imenu-transform '(("Package" ("Test.ABC")))))

Name: package_declaration (selected_component)

=-=
package Test.ABC is
end Test.ABC;
=-=-=

Code: (lambda () (imenu-transform '(("Subprogram" ("ABC")))))

Name: subprogram_declaration (identifier) / procedure

=-=
procedure ABC;
=-=-=

Name: subprogram_declaration (selected_component) / procedure

Code: (lambda () (imenu-transform '(("Subprogram" ("Test.ABC")))))

=-=
procedure Test.ABC;
=-=-=

Code: (lambda () (imenu-transform '(("Subprogram" ("ABC")))))

Name: subprogram_declaration (identifier) / function

=-=
function ABC return Integer;
=-=-=

Code: (lambda () (imenu-transform '(("Subprogram" ("\"+\"")))))

Name: subprogram_declaration (string_literal) / function

=-=
function "+" (Left, Right : Integer) return Integer;
=-=-=

Code: (lambda () (imenu-transform '(("Subprogram" ("Test.ABC")))))

Name: subprogram_declaration (selected_component) / function

=-=
function Test.ABC return Integer;
=-=-=

Name: Various

Code: (lambda () (imenu-transform
                  '(("Package"    ("Test" ("XYZ")
                                          ("XYZ" ("UVW_1")
                                                 ("UVW_2")
                                                 ("UVW_3")
                                                 ("UVW_4")
                                                 ("UVW_4" ("DEF_3"))
                                                 ("ABC_4" ("DEF_9")))))
                    ("Subprogram" ("Test" ("XYZ" ("UVW_4" ("DEF_0")
                                                          ("DEF_1")
                                                          ("DEF_2"))
                                                 ("\"+\"")
                                                 ("ABC_1")
                                                 ("ABC_2")
                                                 ("ABC_3")
                                                 ("ABC_4")
                                                 ("ABC_4" ("DEF_6")
                                                          ("DEF_7")
                                                          ("DEF_8"))))))))

=-=
separate (Test)
package body XYZ is

   package UVW_1 is
   end UVW_1;

   package body UVW_2 is
   end UVW_2;

   package body UVW_3 is separate;

   generic
      with procedure DEF_0;
      with function DEF_1 return Integer;
      with function DEF_2 return Integer is abstract;
      with package DEF_3 is new GHI;
   package UVW_4 is
   end UVW_4;

   function "+" (Left, Right : Integer) return Integer is (Left + Right);
   function ABC_1 return Integer is separate;
   procedure ABC_2;
   procedure ABC_3 is separate;

   generic
      with procedure DEF_6;
      with function DEF_7 return Integer;
      with function DEF_8 return Integer is abstract;
      with package DEF_9 is new GHI;
   procedure ABC_4;

end XYZ;
=-=-=
