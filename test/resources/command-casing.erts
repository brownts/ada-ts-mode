Code: (lambda () (default-transform) (ada-ts-mode-case-format-buffer))

Name: Buffer Formatting

=-=
WITH ada.text_io;

PROCEDURE hello_world IS
BEGIN
   ada.text_io.put_line ("Hello, world!");
END hello_world;
=-=
with Ada.Text_IO;

procedure Hello_World is
begin
   Ada.Text_IO.Put_Line ("Hello, world!");
end Hello_World;
=-=-=

Name: Keyword Attribute Formatting

=-=
declare
   x : ACCESS integer := y'access;
begin
   null;
end;
=-=
declare
   X : access Integer := Y'Access;
begin
   null;
end;
=-=-=

Name: Keyword ".all" Formatting

=-=
declare
   Y : Integer := X.ALL;
begin
   null;
end;
=-=
declare
   Y : Integer := X.all;
begin
   null;
end;
=-=-=

Code: (lambda () (default-transform) (ada-ts-mode-case-format-region 46 60))

Name: Region Formatting

=-=
WITH ada.text_io;

PROCEDURE hello_world IS
BEGIN
   ada.text_io.put_line ("Hello, world!");
END hello_world;
=-=
WITH ada.text_io;

PROCEDURE hello_world IS
begin
   Ada.Text_IO.put_line ("Hello, world!");
END hello_world;
=-=-=

Name: Point Formatting (keyword)

Code: (lambda () (default-transform) (ada-ts-mode-case-format-at-point))

Point-Char: |

=-=
WITH ada.text_io;

PROCEDURE hello_world IS
BE|GIN
   ada.text_io.put_line ("Hello, world!");
END hello_world;
=-=
WITH ada.text_io;

PROCEDURE hello_world IS
begin
   ada.text_io.put_line ("Hello, world!");
END hello_world;
=-=-=

Name: Point Formatting (identifier)

Code: (lambda () (default-transform) (ada-ts-mode-case-format-at-point))

Point-Char: |

=-=
WITH ada.text_io;

PROCEDURE hello_world IS
BEGIN
   ada.text_io.put_li|ne ("Hello, world!");
END hello_world;
=-=
WITH ada.text_io;

PROCEDURE hello_world IS
BEGIN
   ada.text_io.Put_Li|ne ("Hello, world!");
END hello_world;
=-=-=
